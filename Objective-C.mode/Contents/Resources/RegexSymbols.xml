<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE syntax SYSTEM "symbol.dtd">
<symbols>
    <blocks>
        <beginregex>{</beginregex>
        <endregex>}</endregex>
    </blocks>
	
	<symbol id="Objects" hidden="yes" casesensitive="no" useforautocomplete="yes" scope="markup.tag.attribute.name" color="#006ff8" image="SymbolsV">
		<regex>\*(\w+)</regex>
		<regex>(\w+)\s\=</regex>
		<regex>(\w+);</regex>
		<regex>\[(\w+)</regex>
		<regex>\s(\w+)\)</regex>
		<regex>\((\w+)\)|\(!(\w+)\)</regex>
		<regex>\:(\w+)</regex>
		<regex>\(?[^\w]([a-z]{1}\w+)</regex>
	</symbol>
	
	<symbol id="Import" color="#6C0540" image="SymbolGroup" casesensitive="yes" indentation="0" scope="language.function.objective-c" hidden="no" useforautocomplete="yes">
		<regex>import\s\"([^"]+)\"</regex>
	</symbol>
	
	<symbol id="Import Framework" color="#6C0540" image="SymbolF" casesensitive="yes" indentation="0" scope="language.function.objective-c" hidden="no" useforautocomplete="yes">
		<regex>import\s&lt;\w+\/([^\.]+)\.\w&gt;</regex>
	</symbol>
	
	<!-- <symbol id="User Methods" color="#6C0540" casesensitive="yes" indentation="0" scope="language.function.objective-c" hidden="yes" useforautocomplete="yes">
		<regex>\)(\w+)[^{]+</regex>
	</symbol> -->
	
		<symbol id="language.function" hidden="no" image="SymbolF()" indentation="0" useforautocomplete="yes" scope="language.function">
	    <regex>([-|+][|\s]\([A-z\\s*]+\)[^;|\n|\{]+)</regex>
	    <postprocess>
				<find>([-|+][|\s]\([A-z\\s*]+\))</find>
				<replace></replace>
        <find>(:) *\([^\)]*\)</find>
        <replace>:</replace>
        <find>([\n\r\t\-\+]|\([^\)]*\))|;|\s$</find>
        <replace></replace>
	    </postprocess>
			<arguments>(:)</arguments>
			<captures>{"sender" : "1"}</captures>
			<!-- <captures>{ "value" : "1", "name" : "2", "arguments" : "3" }</captures> -->
			<!-- <arguments>(:\w+)</arguments>
			<captures>{"sender" : "1"}</captures> -->
	  </symbol>

	<!-- <symbol id="Objective-C Methods (without arguments)" image="SymbolF" indentation="1" ignoreblocks="yes" useforautocomplete="yes" scope="language.function.objective-c">
        <regex>(^[ \t]*[-][^(-;]*\([A-Za-z0-9 *_]*\)[A-Za-z0-9_ \t]+[\s\t+|^;])</regex>
        <postprocess>
            <find>(:) *\([^\)]*\)</find>
            <replace></replace>
            <find>([\n\r\t\-\+]| +|\([^\)]*\))</find>
            <replace></replace>
        </postprocess>
    </symbol> -->
	
	<symbol id="C Funtions" image="SymbolF()" indentation="1" ignoreblocks="yes" useforautocomplete="yes">
	        <regex>(?&lt;=[\n\r]|^)(?:[\w0-9_*]+\s+){1,3}[\w0-9_*]+[ \t]*\([\]\[\w0-9_,\s*&amp;/]*\)(?=\s*\{)</regex>
        <postprocess>
            <find>\([^\)]*\)</find>
            <replace>()</replace>
            <find>[\n\r]</find>
            <replace> </replace>
            <find>[ \t]+</find>
            <replace> </replace>
        </postprocess>
    </symbol>

    <symbol id="Objective-C Directives" font-weight="bold" image="SymbolM" indentation="0" ignoreblocks="yes" scope="language.directives">
        <regex>(@implementation[^[:cntrl:]{]*)</regex>
        <postprocess>
            <find>([\n\r]| +)</find>
            <replace> </replace>
						<find>@implementation\s</find>
						<replace></replace>
        </postprocess>
    </symbol>

    <symbol id="Objective-C Synthesize" font-weight="bold" image="SymbolS" indentation="0" ignoreblocks="yes" scope="language.directives">
        <regex>@synthesize\s([^[:cntrl:]{]*);</regex>
        <postprocess>
            <find>([\n\r]| +)</find>
            <replace></replace>
        </postprocess>
    </symbol>

    <symbol id="Objective-C Declarations" font-weight="bold" font-style="italic" image="SymbolH" indentation="0" ignoreblocks="yes" scope="language.declarations">
        <regex>(@interface[^[:cntrl:]{]*|@protocol[^[:cntrl:]{]*)</regex>
        <postprocess>
            <find>([\n\r]| +)</find>
            <replace> </replace>
						<find>@interface|@protocol|\s:\s\w+</find>
						<replace></replace>
        </postprocess>
    </symbol>
	
	<symbol id="Pragma Marks" font-weight="bold" indentation="0" ignoreblocks="yes" show-in-comments="yes" image="SymbolMark" scope="meta.tag.framework.pragma">
        <regex>(#pragma mark[	 -]*[^\n]*)\n</regex>
        <postprocess>
            <find>#pragma mark[-	 \n]*</find> <!-- An empty string places a separator -->
            <replace></replace>
        </postprocess>
    </symbol>
	
	
	<symbol id="Defines" image="Symbol#" indentation="0" ignoreblocks="yes" scope="markup.constant.entity">
      <regex>#define[ \t]*([\w\d()]*)[ \t]+[^\n\r]*[\n\r]</regex>
    </symbol>
	
	<symbol id="CVS/SVN conflict" font-weight="bold" image="SymbolWarn" indentation="0" ignoreblocks="no" scope="markup.invalid">
	        <regex>^&lt;&lt;&lt;&lt;&lt;&lt;&lt;([\n\r]|.)*?======([\n\r]|.)*?&gt;&gt;&gt;&gt;&gt;&gt;&gt;</regex>
	        <postprocess>
	            <find>.*</find>
	            <replace>Versioning conflict!</replace>
	        </postprocess>
	    </symbol>
    	
		<symbol id="Properties" font-weight="bold" hidden="yes" useforautocomplete="no" indentation="0" ignoreblocks="no" scope="language.function.objective-c" image="SymbolP">
			<regex>\.(\w{2,}+)</regex>
		</symbol>
		
	    <symbol id="NSLog" font-weight="normal" font-style="normal" image="SymbolWarn" indentation="0" ignoreblocks="no" show-in-comments="no" scope="language.function.objective-c.log">
        <regex>(NSLog[^;]+?;?)</regex>
        <postprocess>
        	<find>\(</find>
        	<replace> </replace>
					<find>\)</find>
					<replace></replace>
        </postprocess>
    </symbol>

	<symbol id="TODO" font-weight="normal" font-style="normal" image="SymbolT" indentation="0" ignoreblocks="no" show-in-comments="yes" scope="style.at-rule">
	    <regex>(TODO?:?\s[^\n]+)</regex>
      <postprocess>
        <find>TODO:</find>
        <replace>TODO</replace>
      </postprocess>
    </symbol>

    <symbol id="Objective-C implementation and interface" useforautocomplete="yes" hidden="yes" image="SymbolAt">
    	<regex>implementation\s(\w+)|interface\s(\w+)</regex>
    </symbol>

    <symbol id="Objective-C headers" useforautocomplete="yes" hidden="yes" image="SymbolH">
    	<regex>(\w+\.h)</regex>
    </symbol>
	
</symbols>